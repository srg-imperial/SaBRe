# Copyright Â© 2019 Software Reliability Group, Imperial College London
#
# This file is part of SaBRe.
#
# SPDX-License-Identifier: GPL-3.0-or-later

# -*- Python -*-

################################################################################
#
# @LIT_AUTOGENERATED_WARNING@
#
################################################################################

import os
import sys

import lit.formats



# Configuration file for the 'lit' test runner.

# name: The name of this test suite.
config.name = 'sabre-tests'

# testFormat: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(execute_external=True)

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.c', '.S', '.sh']

# excludes: A list of individual files to exclude.
config.excludes = []

# test_source_root: The root path where tests are located.
config.test_source_root = '@PROJECT_SOURCE_DIR@/tests'
config.test_exec_root   = '@CMAKE_BINARY_DIR@/tests'

config.target_triple = '(unused)'

config.substitutions.append(('%{bash}',     '@TEST_BASH_PATH@'))
config.substitutions.append(('%{timeout}',  '@TEST_TIMEOUT_PATH@'))
config.substitutions.append(('%{cc}',       '@TEST_GCC_PATH@'))
config.substitutions.append(('%{clang}',    '@TEST_CLANG_PATH@'))
config.substitutions.append(('%{gcc}',      '@TEST_GCC_PATH@'))

config.substitutions.append(('%{sbr}', '@CMAKE_BINARY_DIR@/sabre'))
config.substitutions.append(('%{sbr-id}', '@CMAKE_BINARY_DIR@/plugins/sbr-id/libsbr-id.so'))
config.substitutions.append(('%{sbr-trc}', '@CMAKE_BINARY_DIR@/plugins/sbr-trace/libsbr-trace.so'))
config.substitutions.append(('%{process-vdso}', '@CMAKE_BINARY_DIR@/tools/process-vdso'))

# Programs for utils tests
config.substitutions.append(('%{bunzip2}'      , '@TEST_BUNZIP2_PATH@'))
config.substitutions.append(('%{bzip2}'        , '@TEST_BZIP2_PATH@'))
config.substitutions.append(('%{cat}'          , '@TEST_CAT_PATH@'))
config.substitutions.append(('%{chacl}'        , '@TEST_CHACL_PATH@'))
config.substitutions.append(('%{chgrp}'        , '@TEST_CHGRP_PATH@'))
config.substitutions.append(('%{chmod}'        , '@TEST_CHMOD_PATH@'))
config.substitutions.append(('%{cp}'           , '@TEST_CP_PATH@'))
config.substitutions.append(('%{date}'         , '@TEST_DATE_PATH@'))
config.substitutions.append(('%{dbus-uuidgen}' , '@TEST_DBUS-UUIDGEN_PATH@'))
config.substitutions.append(('%{dd}'           , '@TEST_DD_PATH@'))
config.substitutions.append(('%{dmesg}'        , '@TEST_DMESG_PATH@'))
config.substitutions.append(('%{dumpkeys}'     , '@TEST_DUMPKEYS_PATH@'))
config.substitutions.append(('%{ed}'           , '@TEST_ED_PATH@'))
config.substitutions.append(('%{efibootmgr}'   , '@TEST_EFIBOOTMGR_PATH@'))
config.substitutions.append(('%{fgconsole}'    , '@TEST_FGCONSOLE_PATH@'))
config.substitutions.append(('%{fgrep}'        , '@TEST_FGREP_PATH@'))
config.substitutions.append(('%{fuser}'        , '@TEST_FUSER_PATH@'))
config.substitutions.append(('%{grep}'         , '@TEST_GREP_PATH@'))
config.substitutions.append(('%{gzip}'         , '@TEST_GZIP_PATH@'))
config.substitutions.append(('%{ip}'           , '@TEST_IP_PATH@'))
config.substitutions.append(('%{kill}'         , '@TEST_KILL_PATH@'))
config.substitutions.append(('%{kmod}'         , '@TEST_KMOD_PATH@'))
config.substitutions.append(('%{lessecho}'     , '@TEST_LESSECHO_PATH@'))
config.substitutions.append(('%{ln}'           , '@TEST_LN_PATH@'))
config.substitutions.append(('%{loginctl}'     , '@TEST_LOGINCTL_PATH@'))
config.substitutions.append(('%{lsmod}'        , '@TEST_LSMOD_PATH@'))
config.substitutions.append(('%{ls}'           , '@TEST_LS_PATH@'))
config.substitutions.append(('%{mktemp}'       , '@TEST_MKTEMP_PATH@'))
config.substitutions.append(('%{mount}'        , '@TEST_MOUNT_PATH@'))
config.substitutions.append(('%{nano}'         , '@TEST_NANO_PATH@'))
config.substitutions.append(('%{nc}'           , '@TEST_NC_PATH@'))
config.substitutions.append(('%{ntfs-3g}'      , '@TEST_NTFS-3G_PATH@'))
config.substitutions.append(('%{openvt}'       , '@TEST_OPENVT_PATH@'))
config.substitutions.append(('%{ping}'         , '@TEST_PING_PATH@'))
config.substitutions.append(('%{ps}'           , '@TEST_PS_PATH@'))
config.substitutions.append(('%{sed}'          , '@TEST_SED_PATH@'))
config.substitutions.append(('%{setfacl}'      , '@TEST_SETFACL_PATH@'))
config.substitutions.append(('%{su}'           , '@TEST_SU_PATH@'))
config.substitutions.append(('%{tar}'          , '@TEST_TAR_PATH@'))

config.available_features = [@SABRE_AVAILABLE_TEST_FEATURES_STR@]
